name: "Testing"

on:
  workflow_dispatch:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "**"

permissions:
  contents: write
  pull-requests: write

defaults:
  run:
    shell: bash

concurrency:
  group: "${{ github.workflow }}@${{ github.event.pull_request.head.label || github.head_ref || github.ref }}"

jobs:
  test:
    name: Test
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    env:
      GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      CACHE_PATH: ${{ matrix.os == 'macos-latest' && '/private/var/tmp/_bazel_runner/' || '~/.cache/bazel' }}
    outputs:
      created: "${{ steps.release.outputs.prs_created }}"
      pr: "${{ steps.output-pr.outputs.number }}"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Bazel
        uses: bazel-contrib/setup-bazel@0.8.5
        with:
          bazelisk-cache: true
          disk-cache: ${{ github.workflow }}
          repository-cache: true

      - name: Cache Bazel
        uses: actions/cache@v4
        with:
          path: ${{ env.CACHE_PATH }}
          key: ${{ runner.os }}-bazel-${{ hashFiles('.bazelversion', '.bazelrc', 'WORKSPACE', 'MODULE.bazel') }}
          restore-keys: |
            ${{ runner.os }}-bazel-

      - name: Build Bazel artifacts
        run: |
          bazel --output_user_root=${{ env.CACHE_PATH }} build //...

      - name: Test Bazel artifacts
        run: |
          bazel --output_user_root=${{ env.CACHE_PATH }} test //...

      # create a release PR
      - name: Run Release-Please
        uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ env.GITHUB_TOKEN }}
          config-file: "release-please-config.json"
          manifest-file: ".release-please-manifest.json"
          release-type: bazel

      - name: Output crated PR number
        id: output-pr
        run: |
          echo "number=${{ fromJSON(steps.release.outputs.pr).number }}" >> "$GITHUB_OUTPUT"

      # Fail here if tests didn't succeed
      - name: Generate Release artifacts
        if: ${{ success() && steps.release.outputs.prs_created }}
        run: |
          scripts/release.sh executables
          scripts/release.sh tarballs

      - name: Upload Release artifacts
        if: ${{ success() && steps.release.outputs.prs_created }}
        uses: actions/upload-artifact@v4
        with:
          name: distributables
          path: |
            dist/*.tar.gz
            dist/*.txt

  dispatch:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
    needs: [test]
    steps:
      - name: Dispatch a release workflow run
        if: ${{ needs.test.outputs.created }}
        uses: actions/github-script@v7
        with:
          github-token: "${{ env.GITHUB_TOKEN }}"
          script: |
            const payload = {
              pr_number: "${{ needs.test.outputs.pr }}"
              run_id: "${{ github.run_id }}",
              sha: "${{ github.sha }}"
            }

            console.log("Sending event payload", JSON.stringify(payload, null, 2));

            const { owner, repo } = context.repo;
            await github.rest.repos.createDispatchEvent({
              owner, 
              repo,
              event_type: 'release',
              client_payload: payload
            });
